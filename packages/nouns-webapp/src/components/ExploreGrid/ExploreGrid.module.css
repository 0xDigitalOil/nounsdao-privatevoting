.exploreWrap {
    padding: 0;
    border: 1px solid rgba(0,0,0,0.1);
    margin: 0 3vw;
    border-radius: 10px;
}

.gridWrap {
    width: 100%;
    /* width: fit-content; */
}

.detailBlock {
    /* width: 33%; */
    max-width: 500px;
    flex: 0 0 33%;    
}

.contentWrap {
    display: flex;
    justify-content: space-between;
    position: relative;
    /* flex-direction: row-reverse; */
    /* height: 100vh;
    overflow: auto !important; */
}

.exploreGrid {
    display: flex;
    flex: 1 1;
    width: 100%;
}
.exploreGrid ul {
    padding: 15px;
    margin: 0;
    width: 100%;
    display: flex;
    flex-wrap: wrap;
    /* display: grid; */
    /* grid-template-columns: repeat(10, 1fr); */
    
    transition: all 0.15s ease-in-out;
    --gap: 15px;
    --columns: 10;
    gap: var(--gap);
}

.exploreGrid.small ul {
    --gap: 7px;
    --columns: 20;
    gap: var(--gap);
}

.exploreGrid li {
    position: relative;
    list-style-type: none;
    margin: 0;
    padding: 0;
    width: 10%;
    /* transition: border 0.05s ease-in-out; */
    transition: width 0.2s ease-in-out;
    border: transparent 1px solid;
    animation-name: animateIn;
    animation-duration: 25ms;
    animation-delay: calc(var(--animation-order) * 25ms);
    animation-fill-mode: both;
    animation-timing-function: ease-in-out;
    border-radius: 10px;
    overflow: hidden;
    width: calc((100% / var(--columns)) - var(--gap) + (var(--gap) / var(--columns)));

}

.exploreGrid.small li {
    width: calc((100% / var(--columns)) - var(--gap) + (var(--gap) / var(--columns)));
    /* border-radius: 5px; */
}

.exploreGrid li:hover {
    /* border: 1px solid rgba(0,0,0,0.2) !important; */
}

.exploreGrid li:hover img, .exploreGrid li.activeNoun:hover img {
    transform: scale(1.1);
    /* top: -4px; */
    /* border-radius: 3%; */
    transition: transform 0.1s ease-in-out;
}

.exploreGrid li.activeNoun:hover img {
    transform: scale(0.9);
}

.exploreGrid li img {
    max-width: none;
    margin: 0 auto;
    width: 100%;
    position: relative;
    /* border-radius: 10px; */
    transition: transform 0.1s ease-in-out;
    /* Animation conflicts with transform */
    /* animation-name: animateIn; */
    animation-duration: 60ms;
    animation-delay: calc(var(--animation-order) * 25ms);
    animation-fill-mode: both;
    animation-timing-function: ease-in-out;
}
.exploreGrid li button {
    border: 0;
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    flex-direction: column;
    position: relative;
    background: #d5d7e1;
    width: 100%;
    aspect-ratio: 1;
    transition: transform 0.05s ease-in-out;
}

.exploreGrid .nounIdOverlay {
    margin: 0;
    position: absolute;
    bottom: 6px;
    opacity: 0;
    /* Make match noun bg color */
    background: rgba(255,255,255,0.9); 
    border-radius: 6px;
    padding: 4px 6px;
    line-height: 1;
    font-family: 0.8rem;
    box-shadow: 0px 0px 10px rgb(0 0 0 / 25%);
    font-family: 'Londrina Solid';
    transition: all .05s ease-in-out;
    @media (max-width: 991px) {
        display: none;
    }
}

.exploreGrid li:hover .nounIdOverlay, 
.exploreGrid li.activeNoun:hover .nounIdOverlay {
    background: #fff;
}
.exploreGrid li:hover .nounIdOverlay, 
.exploreGrid li:focus .nounIdOverlay,
.exploreGrid li.activeNoun .nounIdOverlay, 
.exploreGrid li.activeNoun:focus .nounIdOverlay, 
.exploreGrid li.activeNoun:hover .nounIdOverlay {
    opacity: 1;
    bottom: 6px;
    transition: none;
}

.exploreGrid li.activeNoun .nounIdOverlay, 
.exploreGrid li.activeNoun:focus .nounIdOverlay, 
.exploreGrid li.activeNoun:hover .nounIdOverlay {
    bottom: 14px;
}


.exploreGrid .activeNoun button:focus {
    border: none;
    outline: transparent;
}

.exploreGrid li a {
    display: block;
}
.exploreGrid li .currentAuction {
    position: absolute;
    bottom: 0;
    width: 100%;
    background: rgba(255,255,255,0.8);
    color: #000;
    font-size: 0.5em;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    margin: 0;
    padding: 2px 3px 1px;
}

.exploreGrid li .label {
    text-align: center;
    font-family: 'Londrina Solid';
    margin: 0;
    padding: 0;
    opacity: 0;
    position: absolute;
    bottom: 0px;
    /* transition: all 0.2s ease-in-out; */
}

.exploreGrid li:hover .label {
    bottom: 0px;
    opacity: 1;
}

.exploreGrid li.activeNoun button {
    /* border: 10px solid transparent; */
    /* border: 1px solid rgba(0,0,0,0.2) !important; */
    /* border: 5px solid rgb(214, 60, 94) !important; */
    background: rgba(214, 60, 94, 1);
}
.activeNoun button img{
    border-radius: 6px;
    transform: scale(0.9);
    /* overflow: hidden; */
}

.activeNoun button img {
    
}

li.activeNoun button img, li.activeNoun:hover button img {
    transform: scale(0.9);
    transition: transform 0.05s ease-in-out;
}

.detailWrap > div{
    /* height: 100%; */
}

.exploreGrid li a > div {
    width: 100%;
    padding: 0;
    height: auto;
    position: relative;
}

.exploreGrid.fullViewGrid li {
    width: 3%;
}

.nav {
    justify-content: space-between;
    display: flex;
    grid-gap: 10px;
    /* margin-bottom: 10px; */
    /* padding: 15px 1em 0; */
    padding: 15px;
    border-bottom: rgba(0,0,0,0.1) 1px solid;
    width: 100%;
}

.nav .buttons, .nav .sizing {
    display: flex;
    gap: 1em;
}

.nav svg {
    width: 24px;
    opacity: 0.5;
}

.nav .iconTextButton svg {
    margin-right: 0.4rem;
}

.nav .iconTextButton:hover {
    color: black;
    background-color: var(--brand-cool-accent);
}

.nav .sort {
    display: flex;
    grid-gap: 0.5rem;
    justify-content: center;
    align-items: center;
}
.nav .sort p {
    /* display: inline;
    opacity: 0.75; */
}

.nav .selectWrap {
    color: var(--brand-cool-light-text);
    border: 1px solid var(--brand-cool-border);
    border-radius: 10px;
    padding: 0;
    border: 1px solid rgba(0, 0, 0, 0.1);
    background: transparent;
    font-size: 16px;
    line-height: 16px;
    font-family: 'PT Root UI';
    font-weight: bold;
}

.nav .selectWrap:hover {
    background-color: #e2e3e8;
    color: black;
    transition: all 0.2s ease-in-out;
}
.nav .selectWrap select:hover {
    cursor: pointer;
}
.nav .selectWrap select {
    background: transparent;
    border: 0;
    padding: .5rem;
    color: rgb(95, 95, 95);
    font-weight: bold;
    border-right: 5px solid transparent;
}

.nav button {
    color: var(--brand-cool-light-text);
    border: 1px solid var(--brand-cool-border);
    border-radius: 10px;
    padding: .5rem;
    border: 1px solid rgba(0, 0, 0, 0.1);
    background: transparent;
    font-family: 'PT Root UI';
    font-size: 16px;
    line-height: 16px;
    font-family: 'PT Root UI';
    font-weight: bold;
}

.nav button .icon {
    margin-right: 0.4rem;
}

.nav button:hover svg {
    opacity: 0.5;
}

.nav button:hover {
    background-color: #e2e3e8;
    color: black;
    transition: all 0.2s ease-in-out;
}

.nav button:hover svg {
    opacity: 0.8;
}

.nav button.activeLayout {
    border: 1px solid rgba(0, 0, 0, 0.25)
}

.nav button.activeLayout svg {
    opacity: 0.8;
}

.nav button.activeLayout svg path {
    fill: rgba(0, 0, 0, 0.8);
}

.nav h3 {
    font-size: 13px;
    opacity: 0.65;
    text-transform: uppercase;
    /* font-weight: bold; */
    letter-spacing: 0.1em;
    line-height: 1;
    align-self: center;
    margin: 0;
}

@keyframes animateIn {
    0% {
      opacity: 0;
      transform: translateY(25px);
    }
    
    100% {
      opacity: 1;
      transform: translateY(0px);
    }
}

@media (max-width: 991px) {
    .exploreWrap {
        border: 0;
        padding: 0;
    }
    .exploreGrid ul {   
        --gap: 5px;
        --columns: 8;
        padding: 0;
    }

    .exploreGrid ul img, .exploreGrid ul li {   
        border-radius: 5px;
    }
    .nav {
        border: 0;
        padding: 0 0 15px 0;
    }
    .nav .sizing {
        display: none;
    }
    .exploreGrid .nounIdOverlay { 
        display: none;
    }
}

@media (max-width: 400px) {
    .exploreGrid ul {
        --gap: 5px;
        --columns: 5;
    }
    .exploreGrid ul li {   
        width: calc((100% / var(--columns)) - var(--gap) + (var(--gap) / var(--columns)));
    }
}